@model Business.Models.ShippingLog
@{
    Layout = null;
}

@using (Html.BeginForm("AddShipping", "Product", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
{
    @Html.HiddenFor(model => model.ShippingID)
    <div class="form-group">
        @Html.DisplayNameFor(model => model.KindName)
        @Html.DropDownListFor(model => model.KindName, new SelectList(Model.KindListCollection, "KindName", "KindName"), "選擇種類")
        @Html.ValidationMessageFor(model => model.KindName)
    </div>
    <div class="form-group">
        @Html.DisplayNameFor(model => model.ItemName)
        @Html.DropDownListFor(model => model.ItemName, new SelectList(" "), "選擇項目")
        @Html.ValidationMessageFor(model => model.ItemName)
    </div>
    <div class="form-group">
        @Html.DisplayNameFor(model => model.ProductName)
        @Html.DropDownListFor(model => model.ProductName, new SelectList(" "), "選擇品名")
        @Html.ValidationMessageFor(model => model.ProductName)
    </div>
    <div class="form-group" hidden>
        @Html.LabelFor(model => model.CreateTime, new { @class = "control-label" })
        @Html.EditorFor(model => model.CreateTime, new { htmlAttributs = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.CreateTime)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Qty, new { @class = "control-label" })
        @Html.EditorFor(model => model.Qty, new { htmlAttributs = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Qty)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.UnitPrice, new { @class = "control-label" })
        @Html.EditorFor(model => model.UnitPrice, new { htmlAttributs = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.UnitPrice)
    </div>
    <div class="form-group">
        <input type="submit" value="送出" class="btn btn-primary" />
        <input type="reset" value="取消" class="btn" />
    </div>
}

<script>
    $(document).ready(function () {

        $("#KindName").ready(function () {
            $.get("/Product/GetItemListByKindName", { KindName: $("#KindName").val() }, function (data) {
                $("#ItemName").empty();
                $.each(data, function (index, row) {
                    $("#ItemName").append("<option value='" + row.ItemName + "'>" + row.ItemName + "</option>")
                });
            });
        });
        $("#KindName").change(function () {
            $.get("/Product/GetItemListByKindName", { KindName: $("#KindName").val() }, function (data) {
                $("#ItemName").empty();
                $.each(data, function (index, row) {
                    $("#ItemName").append("<option value='" + row.ItemName + "'>" + row.ItemName + "</option>")
                });
            });
        });
        $("#ItemName").change(function () {
            $.get("/Product/GetProductListByItemName", { ItemName: $("#ItemName").val() }, function (data) {
                $("#ProductName").empty();
                $.each(data, function (index, row) {
                    $("#ProductName").append("<option value='" + row.ProductName + "'>" + row.ProductName + "</option>")
                });
            });
        }); $("#ItemName").click(function () {
            $.get("/Product/GetProductListByItemName", { ItemName: $("#ItemName").val() }, function (data) {
                $("#ProductName").empty();
                $.each(data, function (index, row) {
                    $("#ProductName").append("<option value='" + row.ProductName + "'>" + row.ProductName + "</option>")
                });
            });
        });

    });

</script>